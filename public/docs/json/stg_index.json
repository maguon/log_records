{
  "swagger": "2.0",
  "info": {
    "description": "The documents for myxxjs save record api",
    "version": "1.0.0",
    "title": "Logistic record api doc",
    "contact": {
      "email": "info@myxxjs.com"
    },
    "license": {
      "name": "View source at github",
      "url": "https://github.com/maguon/log_records"
    }
  },
  "host": "stg.myxxjs.com:9004",
  "basePath": "/api",
  "tags": [
    {
      "name": "car",
      "description": "car operation records",
      "externalDocs": {
        "url" : "stg.myxxjs.com:9004",
        "description": " records api"
      }
    },
    {
      "name": "operate",
      "description": "user operation records",
      "externalDocs": {
        "url" : "stg.myxxjs.com:9004",
        "description": " operate records api"
      }
    },
    {
      "name": "truck",
      "description": "truck gps info",
      "externalDocs": {
        "url" : "stg.myxxjs.com:9004",
        "description": " query truck gps and record api"
      }
    },
    {
      "name": "tuser",
      "description": "target user  info",
      "externalDocs": {
        "url" : "stg.myxxjs.com:9004",
        "description": " query target user record api"
      }
    },
    {
      "name": "route",
      "description": "route task record",
      "externalDocs": {
        "url" : "stg.myxxjs.com:9004",
        "description": "query route task record info"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/user/{userId}/car/{carId}/record": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "get car all records",
        "description": "get car all records incloud image and operation ",
        "operationId": "getCarRecord",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "carId",
            "in": "path",
            "description": "The car unique id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/car/{carId}/vin/{vin}/storageImage": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "uploads car image",
        "description": "",
        "operationId": "saveStorageImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "car unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "vin",
            "in": "path",
            "description": "car unique vin code",
            "required": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "body",
            "description": "image info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{userId}/record/{recordId}/image/{url}": {
      "delete": {
        "tags": [
          "car"
        ],
        "summary": "remove a  car image",
        "description": "",
        "operationId": "removeStorageImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "recordId",
            "in": "path",
            "description": "car record unique  code",
            "required": true,
            "type": "string"
          },
          {
            "name": "url",
            "in": "path",
            "description": "image url",
            "required": true,
            "type":"string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/car/{carId}/vin/{vin}/record": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "uploads car record",
        "description": "",
        "operationId": "saveCarRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "car unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "vin",
            "in": "path",
            "description": "car unique vin code",
            "required": true,
            "type": "string"
          },
          {
            "name": "record",
            "in": "body",
            "description": "record info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/record"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/opRecord": {
      "post": {
        "tags": [
          "operate"
        ],
        "summary": "uploads user operate record",
        "description": "",
        "operationId": "saveOperateRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "opRecord",
            "in": "body",
            "description": "op{11:import,12:moving,13:export} ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/opRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "operate"
        ],
        "summary": "query user operate record",
        "description": "",
        "operationId": "getOperateRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "op",
            "in": "query",
            "description": "op{11:import,12:moving,13:export} ",
            "required": false,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "user unique id ",
            "required": false,
            "type": "integer"
          },
          {
            "name": "username",
            "in": "query",
            "description": "operate user name ",
            "required": false,
            "type": "string"
          },
          {
            "name": "userType",
            "in": "query",
            "description": "operate user type ",
            "required": false,
            "type": "integer"
          },
          {
            "name": "carId",
            "in": "query",
            "description": "car unique id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "vin",
            "in": "query",
            "description": "car vin code",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start pos for pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "query size for pagination",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{userId}/truckGps": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "get all truck gps info current",
        "description": "get  all  gps ,velocity ,oil etc",
        "operationId": "getTruckGps",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user unique id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{userId}/truck/{vhe}/record": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "get truck all records",
        "description": "get truck all records incloud image and operation ",
        "operationId": "getTruckRecord",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "vhe",
            "in": "path",
            "description": "The truck unique license NO. ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{userId}/truck/{vhe}/image": {
      "post": {
        "tags": [
          "truck"
        ],
        "summary": "uploads truck image",
        "description": "",
        "operationId": "saveTruckImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "vhe",
            "in": "path",
            "description": "truck unique license series number",
            "required": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "body",
            "description": "image info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{userId}/record/{recordId}/truck/{vhe}/image/{url}": {
      "delete": {
        "tags": [
          "truck"
        ],
        "summary": "remove a  truck image",
        "description": "",
        "operationId": "removeTruckImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "recordId",
            "in": "path",
            "description": "truck record unique  code",
            "required": true,
            "type": "string"
          },
          {
            "name": "vhe",
            "in": "path",
            "description": "truck license number series",
            "required": true,
            "type": "string"
          },
          {
            "name": "url",
            "in": "path",
            "description": "image url",
            "required": true,
            "type":"string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/truckRecord": {
      "post": {
        "tags": [
          "truck"
        ],
        "summary": "uploads truck record",
        "description": "",
        "operationId": "saveTruckRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [


          {
            "name": "record",
            "in": "body",
            "description": "record info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/record"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },

    "/user/{userId}/tuser/{tid}/record": {
      "get": {
        "tags": [
          "tuser"
        ],
        "summary": "get target uer all records",
        "description": "get user all records incloud image and operation ",
        "operationId": "getUserRecord",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "tid",
            "in": "path",
            "description": "The target user unique id ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{userId}/tuser/{tid}/image": {
      "post": {
        "tags": [
          "tuser"
        ],
        "summary": "uploads tuser image",
        "description": "",
        "operationId": "saveUserImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "tid",
            "in": "path",
            "description": "target user uniqueid",
            "required": true,
            "type": "integer"
          },
          {
            "name": "image",
            "in": "body",
            "description": "image info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{userId}/record/{recordId}/tuser/{tid}/image/{url}": {
      "delete": {
        "tags": [
          "tuser"
        ],
        "summary": "remove a  target user image",
        "description": "",
        "operationId": "removeUserImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "recordId",
            "in": "path",
            "description": "truck record unique  code",
            "required": true,
            "type": "string"
          },
          {
            "name": "tid",
            "in": "path",
            "description": "target user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "url",
            "in": "path",
            "description": "image url",
            "required": true,
            "type":"string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/tuser/{tid}/record": {
      "post": {
        "tags": [
          "tuser"
        ],
        "summary": "uploads user record",
        "description": "",
        "operationId": "saveUserRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "tid",
            "in": "path",
            "description": "target user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "record",
            "in": "body",
            "description": "record info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/record"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/routeRecord": {
      "post": {
        "tags": [
          "route"
        ],
        "summary": "uploads user operate route record",
        "description": "",
        "operationId": "saveRouteRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "routeRecord",
            "in": "body",
            "description": "op{31:create,32:accept,33:doing,34:on road,38:cancel,39:completed} ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/routeRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "operate"
        ],
        "summary": "query user operate route record",
        "description": "",
        "operationId": "getRouteRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "routeId",
            "in": "query",
            "description": "route unique id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start pos for pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "query size for pagination",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "image": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "userId": {
          "type": "integer"
        },
        "userType": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "record": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "userId": {
          "type": "integer"
        },
        "userType": {
          "type": "integer"
        },
        "content": {
          "type": "string"
        },
        "op": {
          "type": "integer"
        }
      }
    },
    "opRecord": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "userId": {
          "type": "integer"
        },
        "userType": {
          "type": "integer"
        },
        "carId": {
          "type": "integer"
        },
        "vin": {
          "type": "string"
        },
        "op": {
          "type": "integer"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "routeRecord": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "userId": {
          "type": "integer"
        },
        "userType": {
          "type": "integer"
        },
        "routeId": {
          "type": "integer"
        },
        "comment": {
          "type": "string"
        }
      }
    }
  }

}